18.07
/*
======================== FULL MANUAL TEST PLAN (3 TERMINALS) ========================

./ircserv <port> <password>

    port: The port number on which your IRC server will be listening
    password: The connection password. It will be needed by any IRC client that tries to connect to your server

127.0.0.1 is the local loopback IP =   “this same computer”

____________________
do:
- Server running: ./ircserv  6667 password
  test memory leaks: 
        valgrind --leak-check=full ./ircserv 6667 pass
- All clients use: nc -C 127.0.0.1 6667

------------------------------------------------------------------------------------
🖥️ Terminal A — Client "A"
------------------------------------------------------------------------------------
PASS password
NICK A
USER A 0 * :A K

JOIN #test
=> Expect: JOIN, 353 (names), 366 (end of names)
=> Server log: channel created, operator granted

MODE #test +i           // Make invite-only
MODE #test +k secret    // Add key
MODE #test +l 2         // Limit to 2 users

INVITE bob #test
=> Expect: 341 (RPL_INVITING)
=> Log: invitation added

------------------------------------------------------------------------------------
🖥️ Terminal B — Client "B"
------------------------------------------------------------------------------------
PASS password
NICK B
USER B 0 * : B 

JOIN #test
=> Expect: JOIN, 353, 366
=> JOIN allowed (was invited)
=> Invitation auto-removed
=> Log: B added

PRIVMSG A :hello
=> A receives message

PRIVMSG #test :hi everyone
=> Sent to A

PART #test
=> Expect PART on A
=> Log: B removed

------------------------------------------------------------------------------------
🖥️ Terminal C — Client "charlie"
------------------------------------------------------------------------------------
PASS password
NICK charlie
USER charlie 0 * :Charlie

JOIN #test
=> Expect: 473 ERR_INVITEONLYCHAN

INVITE charlie #wrongchan
=> Expect: 403 ERR_NOSUCHCHANNEL

------------------------------------------------------------------------------------
🧪 Additional Checks
------------------------------------------------------------------------------------
JOIN ch
=> Expect: 476 ERR_BADCHANMASK

JOIN
=> Expect: 461 ERR_NEEDMOREPARAMS

INVITE notconnected #test
=> Expect: 401 ERR_NOSUCHNICK

JOIN #test wrongkey
=> Expect: 475 ERR_BADCHANNELKEY

JOIN #test secret
=> Expect: 471 ERR_CHANNELISFULL (if 2 members already in)

PART #notexist
=> Expect: 403 ERR_NOSUCHCHANNEL

PRIVMSG nouser :hi
=> Expect: 401 ERR_NOSUCHNICK

------------------------------------------------------------------------------------
🔁 Signal / Cleanup Test
------------------------------------------------------------------------------------
Press Ctrl+C in server terminal
=> Expect: clean shutdown message
=> All clients disconnected gracefully
=> No crash or memory leak (check with valgrind)

------------------------------------------------------------------------------------
✅ Expected Server Logging (examples)
------------------------------------------------------------------------------------
Created channel #test by user A
Client with fd 4 was granted operator status
User B joined channel: #test
User charlie attempted to join invite-only channel
Client removed from channel: B
Invitation removed for fd 5 in channel: #test
Client disconnected (Ctrl+C or QUIT)

------------------------------------------------------------------------------------
💡 Use this plan for final manual testing before push or defense
- Covers all valid/invalid commands
- Confirms all reply codes
- Checks cleanup, join/part, invite-only, channel limits, keys
- Validates signals, operator rules, and message routing

====================================================================================
*/






test memory leaks: 
        valgrind --leak-check=full ./ircserv 6667 pass
        2.terminal:
          nc -C 127.0.0.1 6667
              PASS pass
              NICK testuser
              USER testuser 0 * :Real Name
              
              JOIN #42
              PRIVMSG #git che42 :Hello world!
              QUIT



28.06
STEps to test:
0. Check if your previous server is still running
lsof -i :6667
kill -9 PID

1.terminal:

 make re
 ./ircserv 6667 password123

2.terminal (netcat)
echo -ne "PASS password123\r\nNICK testUser\r\nUSER testUser 0 * :Real Name\r\n" | nc localhost 6667


//


 nc localhost 6667

 //test what you need
 PASS testpass (for now :\r\n = CTR+v, CTR +m, Enter) 
 or
 echo -e "PASS test\r\n" | nc localhost 6667
 
 test ping:
  echo -e "PING test\r\n" | nc localhost 6667

To stop: 
2.terminal (netcat) 
	 Ctrl+D  in netcat 2.terminal (EOF, closes connection)

1.terminal
	CTRL+C

_________________
irssi --help

irssi
/server add localhost localhost 6667 -auto -password password123
/connect localhost

/server add localhost localhost 6667 -auto -password password123

irssi
/connect localhost 6667
/pass password123
/nick testUser
/user testUser 0 * :Real Name


with port/user/password:
1)
-c  "connect immediately" (problem with old irssi versions)
irssi -c localhost -p 6667 -n testUser -w password123

or 
2)
irssi -h localhost -p 6667 -n testUser -w password123
    Connect to localhost on port 6667
    Use nickname testUser
    Send PASS password123 automatically
/connect localhost

/quit

with netcat:
nc -C 127.0.0.1 6667

correct order:
PASS myPassword
NICK myNick
USER myUser 0 * :Real Name

valgrind:
valgrind --leak-check=full ./ircserv 6667 password
